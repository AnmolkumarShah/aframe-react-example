{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","arToolKit","sourceType","sourceUrl","stats","parameters","preset","color","material","position","scale","attribute","to","dur","easing","repeat","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAmCeA,E,4MA/BbC,MAAQ,G,4CACR,WACE,OACE,cAAC,iBAAD,CACEC,UAAW,CACTC,WAAY,SACZC,UAAW,4BAEbC,OAAK,EALP,SAOE,cAAC,SAAD,CAAQC,WAAY,CAAEC,OAAQ,QAA9B,SACE,uBACEC,MAAM,OACNC,SAAS,cACTC,SAAS,YACTC,MAAM,cAJR,SAME,6BACEC,UAAU,WACVC,GAAG,UACHC,IAAI,OACJC,OAAO,SACPC,OAAO,yB,GAvBHC,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91558e2a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { AFrameRenderer, Marker } from \"react-web-ar\";\n\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <AFrameRenderer\n        arToolKit={{\n          sourceType: \"webcam\",\n          sourceUrl: \"./images/hiro_marker.png\",\n        }}\n        stats\n      >\n        <Marker parameters={{ preset: \"hiro\" }}>\n          <a-box\n            color=\"pink\"\n            material=\"opacity: 1;\"\n            position=\"0 0.003 0\"\n            scale=\"0.4 0.4 0.4\"\n          >\n            <a-animation\n              attribute=\"rotation\"\n              to=\"360 0 0\"\n              dur=\"5000\"\n              easing=\"linear\"\n              repeat=\"indefinite\"\n            />\n          </a-box>\n        </Marker>\n      </AFrameRenderer>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}